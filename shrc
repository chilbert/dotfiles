## GENERAL ##
alias editor="atom"
alias dotfiles="editor ~/.dotfiles"
alias shrc="editor ~/.dotfiles/shrc"
alias privaterc="editor ~/.dotfiles/privaterc"
alias ios="open -a iPhone\ Simulator"
alias chzsh="chsh -s /bin/zsh"
alias ch="open -a \"Google Chrome\""
alias refresh="source ~/.zshrc"
alias tmux="tmux -2"  # -2 forces tmux to use 256 colors
alias json="pbpaste | jq . | pbcopy" # prettifies JSON in clipboard and stores back in clipboard
alias st="open -a SourceTree"
alias v="st ." # nmeumonic: 'version control'
alias a="atom ."
alias f="fdir"

## GIT ##
alias ggraph="git log --all --graph --decorate --oneline --simplify-by-decoration"
alias gll="git log -n 20 | head"
alias gdd="git branch -d"
alias gs="git status"
alias gsa="git stash apply"
alias gp="git push"
alias g-="git checkout -"
alias gpr="git pull --rebase"
alias gds="git diff --cached"
alias guncommit="git reset --soft HEAD^"
alias gempty="git commit -am \"empty\" --allow-empty"
alias gamend="git commit --amend --no-edit"
alias ggc="git commit -m"
alias gch="git checkout"
alias gri="git rebase -i"
alias grc="git rebase --continue"
alias gwip="git commit -am \"WIP\""
alias gdw="git diff --word-diff"
alias gcb="current_branch"
alias ggp="git push -u origin `(current_branch)`"

## HEROKU ##
alias hl="heroku logs -t --remote"
alias hlogs="hl"
alias hconfig='heroku config --remote'
alias hconf="hconfig"
alias hc="heroku run rails c --remote"
alias hmigrate="heroku run rake db:migrate --remote"
alias hm="hmigrate"
alias hr="heroku run"
alias ha="heroku addons:open"
alias hbackup="heroku pg:backups:capture --remote"
alias hake="heroku run rake"
alias nr="heroku addons:open newrelic"
alias pt="heroku addons:open papertrail"

## PHP ##
alias phplog="tail -f /Applications/MAMP/logs/php_error.log"

## POSTGRES ##
alias pglog="tail -f /usr/local/var/postgres/server.log"
# run this if getting an error starting postgres after os x crash
alias pgdeletepid="rm /usr/local/var/postgres/postmaster.pid"
alias pgstart="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"

## RUBY ##
alias be="bundle exec"
alias rc="bundle exec rails c"
alias ms="make start"
alias springer="bundle exec spring stop && bundle exec spring start"
alias springrspec="bundle exec spring binstub rspec"
alias routes="bin/rake routes"

## MISCELLANEOUS ##
# add ruby gem info to the man command
alias man="gem man -ls"
alias kts='tmux ls | awk '\''{print $1}'\'' | sed '\''s/://g'\'' | xargs -I{} tmux kill-session -t {}'
# fix oh-my-zshissue with '#' being misinterpreted by bower
alias bower='noglob bower'
# update rbenv ruby definitions. I prefer the rbenv-update plugin to this
alias update_rebenv="cd ~/.rbenv/plugins/ruby-build; git pull"

## PATH ##
PATH=/usr/local/bin:/usr/local/sbin:/usr/local/lib/node:$PATH
PATH=./bin:./vendor/bundle/bin:$PATH
PATH=$PATH:/opt/local/bin
PATH=$PATH:~/.dotfiles/scripts:~/.dotfiles/scripts/private
PATH=$PATH:~/bin
PATH=$PATH:~/go/bin
PATH=~/.rbenv/bin:~/.rbenv/bin/shims:$PATH
eval "$(rbenv init -)"

export PATH
#export NODE_PATH=/usr/local/bin/node
export GOPATH=~/go

## FUNCTIONS ##

function ports() { # Find which process is using 3000 or supplied port, then run kill -9 {pid}
  local port="${1:-3000}"
  lsof -wni tcp:${port};
}

# mkdir recursively and then cd to it
function cdm () { mkdir -p "$@" && eval cd "\"\$$#\""; }

# find directory by name, recursive. Max depth is 6 or optionally specified
function fdir() {
  local depth="${2:-6}"
  find . -maxdepth $depth -type d -name "*${1}*"
}

# simple HTTP server. just type `server` for server on 4000
function server() {
  local port="${1:-4000}"
  python -m SimpleHTTPServer "$port"
}

function ghinit() {
  echo "git remote add origin git@github.com:stevehanson/${1}.git"
}

function pow() {
  echo "http://${1}.10.0.1.96.xip.io/"
}

function light() {
  local syntax="${1}"
  pbpaste | highlight --syntax=html --verbose -O rtf | pbcopy
}

function sandbox() {
 cd $(~/bin/generate_sandbox.py)
}

function hideHidden(){
  defaults write com.apple.finder AppleShowAllFiles -bool NO
  killall Finder
}

function showHidden(){
  defaults write com.apple.finder AppleShowAllFiles -bool YES
  killall Finder
}

function showBundle() {
  bundle show $1 | xargs subl
}

# will dump a backup of the database, where $1 is the remote name
# eg: dump production && import myapp_development
function dump() curl -o latest.dump `heroku pgbackups:url --remote $1`

# will import a backup of the database, where $1 is the database name
function import() pg_restore --verbose --clean --no-acl --no-owner -h localhost -U `whoami` -d $1 latest.dump


# alias "c {x}" to do "cd ~/dev/{x}" with tab completion
c() { cd ~/dev/$1; }
_c() { _files -W ~/dev -/; }
compdef _c c

# alias "s {x}" to do "cd ~/Sites/{x}" with tab completion
s() { cd ~/Sites/$1; }
_s() { _files -W ~/Sites -/; }
compdef _s s


# alias "h {x}" to do "cd ~/{x}" with tab completion
h() { cd ~/$1; }
_h() { _files -W ~/ -/; }
compdef _h h
